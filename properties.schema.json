{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "$id": "https://example.com/product.schema.json",
    "title": "PostgreSQL Hacker Helper settings",
    "description": "Settings for PostgreSQL Hacker Helper VS Code extension",
    "type": "object",
    "definitions": {
        "arraySpecialMemberV2": {
            "type": "object",
            "required": [
                "typeName",
                "memberName",
                "lengthExpression"
            ],
            "properties": {
                "typeName": {
                    "type": "string",
                    "description": "Name of type value of variable. Must be valid C identifier without qualifiers like 'struct' or 'const'",
                    "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$"
                },
                "memberName": {
                    "type": "string",
                    "description": "Member name that contains array",
                    "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$"
                },
                "lengthExpression": {
                    "type": "string",
                    "description": "Expression to evaluate to get array length",
                    "minLength": 1
                }
            }
        },
        "arraySpecialMemberV1": {
            "type": "object",
            "required": [
                "nodeTag",
                "memberName",
                "lengthExpression"
            ],
            "properties": {
                "nodeTag": {
                    "type": "string",
                    "description": "NodeTag value of Node. Either values with 'T_' prefix or without allowed",
                    "pattern": "^(T_)?[a-zA-Z_][a-zA-Z0-9_]*$"
                },
                "memberName": {
                    "type": "string",
                    "description": "Member name that contains array",
                    "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$"
                },
                "lengthExpression": {
                    "type": "string",
                    "description": "Expression to evaluate to get array length"
                }
            }
        },
        "aliasesV2": {
            "type": "array",
            "description": "Aliases for Node types",
            "items": {
                "type": "object",
                "description": "Description of alias for specified Node types",
                "properties": {
                    "alias": {
                        "type": "string",
                        "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
                        "description": "Alias of type"
                    },
                    "type": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Type for which alias is created"
                    }
                },
                "required": [
                    "alias",
                    "type"
                ]
            }
        },
        "typedefs": {
            "oneOf": [
                {
                    "type": "string",
                    "description": "Path to custom typedefs.list file which will be added to default"
                },
                {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of paths to custom typedefs.list files which will be added to default"
                }
            ],
            "description": "Path or array of paths to custom typedefs.list files which will be added to default"
        },
        "version": {
            "type": "integer",
            "default": 5,
            "enum": [
                1,
                2,
                3,
                4,
                5
            ],
            "description": "Version of configuration file layout. Managed by extension"
        },
        "customListType": {
            "type": "object",
            "description": "Description of custom pointer type for specified List",
            "properties": {
                "type": {
                    "type": "string",
                    "pattern": "\\*$",
                    "description": "Type to which 'ListCell's will be casted. Must be pointer."
                },
                "member": {
                    "type": "array",
                    "minItems": 2,
                    "maxItems": 2,
                    "description": "Pair of parent struct name and member name inside this struct, identifying this List*"
                },
                "variable": {
                    "type": "array",
                    "minItems": 2,
                    "maxItems": 2,
                    "description": "Pair of function name and variable name inside this function, identifying this List*"
                }
            },
            "required": [
                "type"
            ]
        },
        "htab": {
            "type": "object",
            "description": "Description of types of entries in HTAB",
            "properties": {
                "type": {
                    "type": "string",
                    "pattern": "\\*$",
                    "description": "Type of entry in Hash Table. Must be pointer."
                },
                "member": {
                    "type": "array",
                    "minItems": 2,
                    "maxItems": 2,
                    "description": "Pair of parent struct name and member name inside this struct, identifying this HTAB*"
                },
                "variable": {
                    "type": "array",
                    "minItems": 2,
                    "maxItems": 2,
                    "description": "Pair of function name and variable inside this function, identifying this HTAB*"
                }
            },
            "required": [
                "type"
            ]
        },
        "simplehash": {
            "type": "object",
            "description": "Description of types of entries in simplehash",
            "properties": {
                "prefix": {
                    "type": "string",
                    "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$",
                    "description": "Prefix for simplehash operations/structures specified in SH_PREFIX"
                },
                "type": {
                    "type": "string",
                    "pattern": "\\*$",
                    "description": "Type of entry in Hash Table. Must be pointer."
                }
            },
            "required": [
                "prefix",
                "type"
            ]
        },
        "enumBitmask": {
            "type": "object",
            "description": "Enum/bitmask stored as integer type with values defined by macros",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Name of parent type to which member belongs"
                },
                "member": {
                    "type": "string",
                    "description": "Name of member in parent type which holds this bitmask member"
                },
                "flags": {
                    "type": "array",
                    "description": "Flags defined for this bitmask member: first - is macro name of enum, second - numeric value assigned to enum",
                    "items": {
                        "type": "array",
                        "minItems": 2,
                        "maxItems": 2,
                        "description": "Pair of macro enum name and value of it's enum in case macros are not available",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "fields": {
                    "type": "array",
                    "description": "Array of bit fields used in specified member",
                    "items": {
                        "type": "object",
                        "description": "Description of a single field inside integer member",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Rendered name of field"
                            },
                            "mask": {
                                "type": "string",
                                "description": "Macro used as mask to get value of this field"
                            },
                            "numeric": {
                                "type": "string",
                                "description": "Numeric value of mask to use when macro are not available in debugger"
                            }
                        }
                    }
                }
            },
            "required": ["type", "member"]
        }
    },
    "oneOf": [
        {
            "type": "object",
            "properties": {
                "version": {
                    "const": 1,
                    "$ref": "#/definitions/version"
                },
                "specialMembers": {
                    "type": "object",
                    "description": "Configurations for special members",
                    "properties": {
                        "array": {
                            "type": "array",
                            "description": "Special members that represent arrays - separate fields for array and it's length",
                            "items": {
                                "$ref": "#/definitions/arraySpecialMemberV1"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "object",
            "properties": {
                "version": {
                    "const": 2,
                    "$ref": "#/definitions/version"
                },
                "specialMembers": {
                    "type": "object",
                    "description": "Configurations for special members",
                    "properties": {
                        "array": {
                            "type": "array",
                            "description": "Special members that represent arrays - separate fields for array and it's length",
                            "items": {
                                "$ref": "#/definitions/arraySpecialMemberV2"
                            }
                        }
                    }
                },
                "aliases": {
                    "$ref": "#/definitions/aliasesV2"
                }
            }
        },
        {
            "type": "object",
            "properties": {
                "version": {
                    "const": 3,
                    "$ref": "#/definitions/version"
                },
                "specialMembers": {
                    "type": "object",
                    "description": "Configurations for special members",
                    "properties": {
                        "array": {
                            "type": "array",
                            "description": "Special members that represent arrays - separate fields for array and it's length",
                            "items": {
                                "$ref": "#/definitions/arraySpecialMemberV2"
                            }
                        }
                    }
                },
                "aliases": {
                    "$ref": "#/definitions/aliasesV2"
                },
                "typedefs": {
                    "$ref": "#/definitions/typedefs"
                }
            }
        },
        {
            "type": "object",
            "properties": {
                "version": {
                    "const": 4,
                    "$ref": "#/definitions/version"
                },
                "specialMembers": {
                    "type": "object",
                    "description": "Configurations for special members",
                    "properties": {
                        "array": {
                            "type": "array",
                            "description": "Special members that represent arrays - separate fields for array and it's length",
                            "items": {
                                "$ref": "#/definitions/arraySpecialMemberV2"
                            }
                        }
                    }
                },
                "aliases": {
                    "$ref": "#/definitions/aliasesV2"
                },
                "typedefs": {
                    "$ref": "#/definitions/typedefs"
                },
                "customListTypes": {
                    "type": "array",
                    "description": "Array of definitions of custom List types",
                    "items": {
                        "$ref": "#/definitions/customListType"
                    }
                }
            }
        },
        {
            "type": "object",
            "properties": {
                "version": {
                    "const": 5,
                    "$ref": "#/definitions/version"
                },
                "specialMembers": {
                    "type": "object",
                    "description": "Configurations for special members",
                    "properties": {
                        "array": {
                            "type": "array",
                            "description": "Special members that represent arrays - separate fields for array and it's length",
                            "items": {
                                "$ref": "#/definitions/arraySpecialMemberV2"
                            }
                        }
                    }
                },
                "aliases": {
                    "$ref": "#/definitions/aliasesV2"
                },
                "typedefs": {
                    "$ref": "#/definitions/typedefs"
                },
                "customListTypes": {
                    "type": "array",
                    "description": "Array of definitions of custom List types",
                    "items": {
                        "$ref": "#/definitions/customListType"
                    }
                },
                "htab": {
                    "type": "array",
                    "description": "Array of definitions of types of entries in HTAB",
                    "items": {
                        "$ref": "#/definitions/htab"
                    }
                },
                "simplehash": {
                    "type": "array",
                    "description": "Array of definitions of types in simple hash tables",
                    "items": {
                        "$ref": "#/definitions/simplehash"
                    }
                },
                "enums": {
                    "type": "array",
                    "description": "Array of definitions of enum types defined as integers and with MACROs used to access them",
                    "items": {
                        "$ref": "#/definitions/enumBitmask"
                    }
                }
            }
        }
    ],
    "required": [
        "version"
    ]
}