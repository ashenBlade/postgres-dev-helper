{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/e1a0eda85b9bd4f9558dc4e97d4d0608b0b9295d/tmlanguage.json",
    "name": "PostgreSQL Configuration file",
    "scopeName": "source.pgconf",
    "firstLineMatch": "# -----------------------------\n# PostgreSQL configuration file",
    "repository": {
        "number-unit": {
            "comment": "Integer and double value with trailing unit",
            "match": "\\b([-+]?((0[xX][\\da-fA-F]+)|(\\d+)(\\.\\d+)?([eE][-+]?\\d+)?)(\\s*((B|kB|MB|GB|TB)|(d|h|min|s|ms|us)|([a-zA-Z]+))\\b)?)",
            "captures": {
                "1": {
                    "name": "constant.numeric.pgconf"
                },
                "8": {
                    "name": "entity.name.type.pgconf"
                },
                "11": {
                    "name": "invalid.illegal.unit.pgconf"
                }
            }
        },
        "boolean": {
            "comment": "Boolean value",
            "match": "\\b(on|off|true|false|yes|no)",
            "captures": {
                "1": {
                    "name": "constant.language.boolean.pgconf"
                }
            }
        },
        "string": {
            "comment": "String value without GUC_LIST_STRING",
            "begin": "'",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.string.begin.pgconf"
                }
            },
            "end": "'",
            "endCaptures": {
                "0": {
                    "name": "punctuation.definition.string.end.pgconf"
                }
            },
            "name": "string.quoted.single.pgconf",
            "patterns": [
                {
                    "match": "\\\\.",
                    "name": "constant.character.escape.pgconf"
                },
                {
                    "include": "#number-unit"
                },
                {
                    "include": "#boolean"
                }
            ]
        },
        "enum": {
            "match": "[a-zA-Z_][a-zA-Z0-9_\\.\\-]*",
            "captures": {
                "0": {
                    "name": "variable.parameter.enum.pgconf"
                }
            }
        },
        "param-name": {
            "match": "[a-zA-Z_][a-zA-Z0-9_\\-]*(\\.[a-zA-Z_][a-zA-Z0-9_\\-]*)*",
            "captures": {
                "0": {
                    "name": "keyword.other.definition.pgconf"
                }
            }
        },
        "param-value": {
            "patterns": [
                {
                    "include": "#string"
                },
                {
                    "include": "#number-unit"
                },
                {
                    "include": "#boolean"
                },
                {
                    "include": "#enum"
                }
            ]
        }
    },
    "patterns": [
        {
            "match": "^\\s*#.*$",
            "comment": "Full line comment",
            "name": "comment.line.number-sign.pgconf"
        },
        {
            "comment": "Line with parameter definition",
            "match": "^\\s*(\\S+)\\s*(=)?\\s*(\\S+)\\s*(#.*)?$",
            "captures": {
                "1": {
                    "patterns": [
                        {
                            "include": "#param-name"
                        }
                    ]
                },
                "2": {
                    "name": "punctuation.separator.key-value.pgconf"
                },
                "3": {
                    "name": "meta.other.value.pgconf",
                    "patterns": [
                        {
                            "include": "#param-value"
                        }
                    ]
                },
                "4": {
                    "patterns": [
                        {
                            "begin": "#",
                            "beginCaptures": {
                                "0": {
                                    "name": "punctuation.definition.comment.pgconf"
                                }
                            },
                            "end": "\\n",
                            "name": "comment.line.number-sign.pgconf"
                        }
                    ]
                }
            }
        }
    ]
}